<%- include("../partials/admin/header.ejs") %>

<div class="container mt-4">
    <h2>Stock Management</h2>
    <% if (products && products.length > 0) { %>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>Stock Quantity</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach(product => { %>
                    <tr>
                        <td><%= product.productName %></td>
                        <td><%= product.category %></td>
                        <td>â‚¹<%= product.salePrice %></td>
                        <td>
                            <input type="number" id="quantity-<%= product._id %>" value="<%= product.quantity %>" class="form-control" min="0">
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary btn-sm" onclick="updateStock('<%= product._id %>')">Update Stock</button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    <% } else { %>
        <p class="text-center text-muted">No products found</p>
    <% } %>
    
    <div class="container mt-3">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                    </li>
                <% } %>
            </ul>
        </nav>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.14.5/dist/sweetalert2.all.min.js"></script>
<script>
function updateStock(productId) {
    const newQuantity = document.getElementById(`quantity-${productId}`).value;
    
    if (newQuantity < 0) {
        Swal.fire({
            title: 'Error',
            text: 'Stock quantity cannot be negative',
            icon: 'error',
            timer: 3000,
            showConfirmButton: false
        });
        return;
    }

    // Send a request to update the stock in the database
    fetch(`/admin/updateProductStock/${productId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ quantity: newQuantity }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: 'Success',
                text: 'Stock updated successfully',
                icon: 'success',
                timer: 3000,
                showConfirmButton: false
            });
        } else {
            Swal.fire({
                title: 'Error',
                text: data.message || 'An error occurred while updating stock',
                icon: 'error',
                timer: 3000,
                showConfirmButton: false
            });
        }
    })
    .catch(error => {
        console.error('Error updating stock:', error);
        Swal.fire({
            title: 'Error',
            text: 'An error occurred while updating stock',
            icon: 'error',
            timer: 3000,
            showConfirmButton: false
        });
    });
}
</script>
