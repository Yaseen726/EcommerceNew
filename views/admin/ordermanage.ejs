<%- include("../partials/admin/header.ejs") %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<style>
    /* Style for the eye button */
/* Style for the main button */
.btn-info {
    color: #fff; /* White text */
    background-color: #17a2b8; /* Bootstrap info color */
    border: none; /* Remove border */
    padding: 6px 12px; /* Adjust padding for better spacing */
    border-radius: 8px; /* Smooth, rounded corners */
    display: inline-flex; /* Center icon and text */
    align-items: center; /* Align content vertically */
    justify-content: center; /* Align content horizontally */
    cursor: pointer; /* Show pointer on hover */
    text-decoration: none; /* Remove underline from link */
    font-size: 14px; /* Slightly larger font */
    transition: all 0.3s ease; /* Smooth transitions */
}

/* Style for the eye icon */
.btn-info i {
    font-size: 18px; /* Icon size */
    margin-left: 8px; /* Add spacing between text and icon */
    vertical-align: middle; /* Align icon with text */
}

/* Hover effect for the button */
.btn-info:hover {
    background-color: #138496; /* Darker info color */
    transform: translateY(-2px); /* Slight upward movement */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); /* Add shadow */
}

/* Focus effect */
.btn-info:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 0 3px rgba(23, 162, 184, 0.5); /* Highlight outline */
}

/* Ensure the link inside the button looks like a button */
.btn-info a {
    color: #fff; /* White text for the link */
    text-decoration: none; /* Remove underline */
    font-weight: bold; /* Bold text */
}

/* Ensure hover effect on the entire button, not just the link */
.btn-info a:hover {
    text-decoration: none; /* Maintain no underline */
    color: #f8f9fa; /* Slightly lighter text color */
}

/* Custom class for alignment */
.view-details {
    display: flex;
    justify-content: center; /* Center the button in its container */
    align-items: center; /* Center icon and text */
    gap: 5px; /* Add spacing between elements */
}


</style>
<div class="container mt-4">
    <h2>Orders Management</h2>
    <% if (orders && orders.length > 0) { %>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Customer Name</th>
                    <th>Items Ordered</th>
                    <th>Total Price</th>
                    <th>Final Amount</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <tr>
                        <!-- Order ID -->
                        <td><%= order.orderId %>
                            <button class="btn btn-info btn-sm view-details">
                                <a href="order/<%= order._id %>">View Details</a>
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>


                        <!-- Customer Name -->
                        <td>
                            <% if (order.userId) { %>
                                <strong><%= order.userId.name %></strong>
                            <% } else { %>
                                <span class="text-danger">Customer not found</span>
                            <% } %>
                        </td>

                        <!-- Ordered Items -->
                        <td>
                            <% order.orderedItem.forEach(item => { %>
                                <p>
                                    <strong>Product:</strong> <%= item.product?.productName || "Unknown" %><br>
                                </p>
                            <% }); %>
                        </td>

                        <!-- Total Price -->
                        <td>₹<%= order.totalPrice.toFixed(2) %></td>

                        <!-- Final Amount -->
                        <td>₹<%= order.finalAmount.toFixed(2) %></td>

                        <!-- Status -->
                        <td>
                            <span
                                class="badge 
                                <%= order.status === 'delivered' ? 'bg-success' : 
                                    (order.status === 'cancelled' ? 'bg-danger' : 'bg-warning') %>"
                            >
                                <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                            </span>
                        </td>

                        <!-- Actions -->
                        <td>
                            <form id="update-order-<%= order.orderId %>" onsubmit="event.preventDefault(); updateOrderStatus('<%= order.orderId %>')">
                                <input type="hidden" name="orderId" value="<%= order.orderId %>">
                                <select id="status-<%= order.orderId %>" name="status" class="form-select form-select-sm mb-2">
                                    <option value="pending" <%= order.status === 'pending' ? 'selected' : '' %>>Pending</option>
                                    <option value="processing" <%= order.status === 'processing' ? 'selected' : '' %>>Processing</option>
                                    <option value="shipped" <%= order.status === 'shipped' ? 'selected' : '' %>>Shipped</option>
                                    <option value="delivered" <%= order.status === 'delivered' ? 'selected' : '' %>>Delivered</option>
                                    <option value="cancelled" <%= order.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                                </select>
                                <button type="submit" class="btn btn-primary btn-sm">Update</button>
                            </form>

                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>

        <!-- Pagination Controls -->
        <nav aria-label="Page navigation" class="mt-4">
            <ul class="pagination justify-content-center">
                <% if (currentPage > 1) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit || 10 %>">Previous</a>
                    </li>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>&limit=<%= limit || 10 %>"><%= i %></a>
                    </li>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit || 10 %>">Next</a>
                    </li>
                <% } %>
            </ul>
        </nav>

    <% } else { %>
        <p class="text-center text-muted">No orders found</p>
    <% } %>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.14.5/dist/sweetalert2.all.min.js"></script>
<script>
async function updateOrderStatus(orderId) {
    const status = document.getElementById(`status-${orderId}`).value;

    Swal.fire({
        title: 'Are you sure?',
        text: `You are about to update the status to "${status}"`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, update it!',
        cancelButtonText: 'No, cancel',
        reverseButtons: true
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                const response = await fetch(`/admin/updateorderstatus`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, status })
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        title: 'Success',
                        text: data.message || 'Order status updated successfully',
                        icon: 'success',
                        timer: 3000,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error',
                        text: data.message || 'An error occurred while updating order status',
                        icon: 'error',
                        timer: 3000,
                        showConfirmButton: false
                    });
                }
            } catch (error) {
                console.error(error);
                Swal.fire({
                    title: 'Error',
                    text: 'An error occurred while updating order status',
                    icon: 'error',
                    timer: 3000,
                    showConfirmButton: false
                });
            }
        }
    });
}
</script>
