<%- include("../partials/user/header") %>
<style>
    :root {
    /* Color Variables */
    --color-secondary: #f39c12;
    --color-text: #333333;
    --color-background: #f8f9fa;
    --color-dark: #2c3e50;
    --color-white: #ffffff;
    --color-success: #28a745;
    
    /* Spacing Variables */
    --spacing-xs: 0.5rem;
    --spacing-sm: 1rem;
    --spacing-md: 1.5rem;
    --spacing-lg: 2rem;
    --spacing-xl: 3rem;
    
    /* Border Radius */
    --radius-sm: 5px;
    --radius-md: 10px;
    --radius-lg: 15px;
    
    /* Transitions */
    --transition-normal: all 0.3s ease;
}

/* Base Styles */
body {
    font-family: 'Poppins', sans-serif;
    background-color: var(--color-background);
    color: var(--color-text);
    line-height: 1.6;
}

.main-container {
    padding-top: var(--spacing-lg);
}
.main-container{
    margin-top: -58px;
}

/* Hero Carousel Styles */
.carousel-content {
    position: relative;
    width: 100%;
    height: 650px; /* Adjust height as needed */
    overflow: hidden;
}
.tempcolor{
    color:#f8f9fa
}

.carousel-bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: none; /* Ensures the image covers the container */
    z-index: -1; /* Places the image behind the content */
}
.carousel-bg2{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: none; /* Ensures the image covers the container */
    z-index: -1; 
}

.carousel-caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff; /* White text for contrast */
    text-align: center;
    z-index: 1;
}

.carousel-caption h2 {
    font-size: 2.5rem;
    margin-bottom: 15px;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* Subtle shadow for better readability */
}

.carousel-caption p {
    font-size: 1.25rem;
    margin-bottom: 20px;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
}

.carousel-caption .btn {
    display: inline-block;
    padding: 10px 20px;
    background-color: #007bff; /* Bootstrap primary color */
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-size: 1rem;
    font-weight: bold;
    transition: background-color 0.3s ease;
}

.carousel-caption .btn:hover {
    background-color: #0056b3; /* Darker blue on hover */
}

/* Products Section Styles */
.products-section {
    padding: var(--spacing-lg) 0;
}

.products-controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-lg);
    flex-wrap: wrap;
    gap: var(--spacing-md);
}

.sorting-controls {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
}

.sort-select {
    padding: var(--spacing-xs);
    border-radius: var(--radius-sm);
    border: 1px solid #ddd;
    background-color: var(--color-white);
}

.products-tabs {
    display: flex;
    align-items: center;
    gap: var(--spacing-lg);
}

/* Product Grid Styles */
.product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: var(--spacing-lg);
}

.product-card {
    background: var(--color-white);
    border-radius: var(--radius-md);
    overflow: hidden;
    transition: var(--transition-normal);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.product-image {
    position: relative;
    height: 250px;
    overflow: hidden;
}

.product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition-normal);
}

.product-card:hover .product-image img {
    transform: scale(1.1);
}

.product-actions {
    position: absolute;
    bottom: var(--spacing-sm);
    right: var(--spacing-sm);
}

.action-btn {
    background-color: var(--color-primary);
    color: var(--color-white);
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: var(--transition-normal);
}

.action-btn:hover {
    background-color: var(--color-secondary);
    transform: scale(1.1);
}

.product-info {
    padding: var(--spacing-sm);
}

.product-title {
    font-size: 1rem;
    margin-bottom: var(--spacing-xs);
    color: var(--color-text);
}

.product-price {
    font-weight: 600;
    color: var(--color-primary);
    margin-bottom: var(--spacing-xs);
}

.product-stock {
    color: var(--color-success);
    font-size: 0.9rem;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .carousel-caption {
        left: 5%;
        right: 5%;
        bottom: 10%;
    }
    
    .products-controls {
        flex-direction: column;
        align-items: stretch;
    }
    
    .view-more {
        display: none;
    }
}
/* Search Bar Styling Inside Products Tabs */
.products-tabs form.d-flex {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px; /* Add spacing between input and button */
    margin: 20px auto; /* Center the form and add margin */
    max-width: 600px; /* Limit the form width for better layout */
}

.products-tabs form.d-flex .form-control {
    flex: 1; /* Allow the input to expand and take available space */
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.products-tabs form.d-flex .form-control:focus {
    outline: none;
    border-color: #007bff; /* Blue border on focus */
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Subtle glow on focus */
}

.products-tabs form.d-flex .btn {
    background-color: #007bff; /* Blue background for the button */
    color: #fff;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

.products-tabs form.d-flex .btn:hover {
    background-color: #0056b3; /* Darker blue on hover */
    transform: scale(1.05); /* Slightly enlarge button on hover */
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
    .products-tabs form.d-flex {
        flex-direction: column; /* Stack input and button vertically */
        gap: 15px;
    }

    .products-tabs form.d-flex .form-control,
    .products-tabs form.d-flex .btn {
        width: 100%; /* Ensure full width for small screens */
    }
}

    </style>
<!-- Main Content Container -->
<main class="main-container">
    <!-- Hero Carousel Section (Kept exactly the same as original) -->
    <section class="hero-carousel section-padding position-relative wow fadeIn animated">
        <div id="homeCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <div class="carousel-content">
                        <img src="uploads/samsung-galaxy-book-pro-stock-dark-background-teal-1920x1200-7564.png" alt="Welcome Slide" class="carousel-bg">
                        <div class="carousel-caption">
                            <h2 class="tempcolor">Welcome to Our Store</h2>
                            <p class="tempcolor">Discover amazing products at unbeatable prices!</p>
                            <a href="/products" class="btn">Shop Now</a>
                        </div>
                    </div>
                </div>
                <div class="carousel-item">
                    <div class="carousel-content">
                        <img src="uploads/galaxy-s24-ultra-highlights-color-titanium-orange-back-mo.jpg" alt="New Arrivals Slide" class="carousel-bg2">
                        <div class="carousel-caption">
                            <h2 class="tempcolor">New Arrivals</h2>
                            <p class="tempcolor">Check out our latest collection!</p>
                            <a href="/" class="btn">Explore</a>
                        </div>
                    </div>
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#homeCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#homeCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>

      
    </section>

    <!-- Products Section (Kept exactly the same as original) -->
    <section id="product-section" class="product-tabs section-padding position-relative wow fadeIn animated" style="display:none;">
        <div class="container">
            <div class="container text-end">
                <a href="/">HOME</a>
            </div><br>
            <!-- Product Controls -->
            <div class="products-controls">
                <div class="sorting-container">
                    <label for="sort-by" class="sort-label">Sort by:</label>
                    <select id="sort-by" class="sort-select" onchange="handleSortChange()">
                        <option value="default">Default</option>
                        <option value="price-low-high">Price: Low to High</option>
                        <option value="price-high-low">Price: High to Low</option>
                        <option value="new-arrivals">New Arrivals</option>
                        <option value="alphabetical-a-z">Alphabetical (A-Z)</option>
                        <option value="alphabetical-z-a">Alphabetical (Z-A)</option>
                    </select>
                    <label for="sort-by" class="sort-label">Categories</label>
                    <select id="cat-filter" class="sort-select" onchange="catFilter()">
                        <option value="all-categories" <%= categoryFilter === 'all-categories' ? 'selected' : '' %>>All Categories</option>
                        <% categories.forEach(category => { %>
                            <option value="<%= category._id %>" <%= categoryFilter === category._id ? 'selected' : '' %>>
                                <%= category.name %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                <!-- Product Tabs -->
                <div class="products-tabs">
                    <form class="d-flex" method="get" action="/search" id="search-form">
                        <input type="text" name="query" value="<%= searchQuery %>" class="form-control" placeholder="Search products...">
                        <button type="submit" class="btn btn-primary ms-2">Search</button>
                    </form>
                </div>
            </div>
            

            <!-- Product Grid -->
            <div class="tab-content">
                <div class="tab-pane fade show active" id="featured" role="tabpanel">
                    <div class="product-grid" id="card">
                        <% products.forEach(product => { %>
                            <div class="product-card">
                                <div class="product-image">
                                    <a href="/productdetails?id=<%= product._id %>">
                                        <img src="/uploads/re-image/<%= product.productImage[0] %>" 
                                            alt="<%= product.productName %>" loading="lazy">
                                    </a>
                                    <div class="product-actions">
                                        <!-- Wishlist Button -->
                                        <button class="action-btn wishlist-btn" onclick="addToWishlist('<%= product._id %>')">
                                            <i class="fi-rs-heart"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="product-info">
                                    <h3 class="product-title"><%= product.productName %></h3>
                                    <p class="product-price">₹ <%= product.salePrice.toLocaleString() %></p>
                                    <% if (product.quantity > 0) { %>
                                        <p class="product-stock">In Stock: <%= product.quantity %></p>
                                    <% } else { %>
                                        <p class="text-danger">Out of Stock</p>
                                    <% } %>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Scripts -->
<script>



function toggleSection(sectionId) {
        // Hide all sections
        document.querySelector('.hero-carousel').style.display = 'none';
        document.getElementById('product-section').style.display = 'none';

        // Show the selected section
        document.querySelector(sectionId).style.display = 'block';
    }

    // Add event listeners to navigation
    document.addEventListener('DOMContentLoaded', () => {
        // Home link
        document.querySelector('a[href="/"]')?.addEventListener('click', (e) => {
            e.preventDefault();
            toggleSection('.hero-carousel');
        });

        // Products link
        document.querySelector('a[href="/products"]')?.addEventListener('click', (e) => {
            e.preventDefault();
            toggleSection('#product-section');
        });
    });

    // Initial page load - show carousel
    document.querySelector('.hero-carousel').style.display = 'block';



async function addToWishlist(productId) {
    try {
        const response = await fetch('/wishlist/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId })
        });

        const result = await response.json();
        if (result.success) {
            Swal.fire({
                title: 'Success!',
                text: 'Product added to your wishlist.',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        } else {
            Swal.fire({
                title: 'Oops!',
                text: result.message || 'Failed to add to wishlist.',
                icon: 'error',
                confirmButtonText: 'Try Again'
            });
        }
    } catch (error) {
        console.error('Error adding to wishlist:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}



function handleSortChange() {
    const sortBy = document.getElementById('sort-by').value;

    fetch(`/sort?sort=${sortBy}`, { 
        method: 'GET'
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        updateProductList(data.products);
    })
    .catch(error => console.error('Error fetching sorted data:', error));
}





function updateProductList(products) {
    const productsContainer = document.getElementById('card');
    productsContainer.innerHTML = ''; // Clear existing content

    if (!Array.isArray(products) || products.length === 0) {
        productsContainer.innerHTML = '<p>No products found</p>'; // Show a message if no products found
        return;
    }

    products.forEach(product => {
        // Create the product card container
        const productCard = document.createElement('div');
        productCard.className = 'product-card';

        // Product Image Section
        const productImage = `
            <div class="product-image">
                <a href="/productdetails?id=${product._id}">
                    <img src="/uploads/re-image/${product.productImage[0]}" 
                         alt="${product.productName}" loading="lazy">
                </a>
                <div class="product-actions">
                    <!-- Wishlist Button -->
                    <button class="action-btn wishlist-btn" onclick="addToWishlist('${product._id}')">
                        <i class="fi-rs-heart"></i>
                    </button>
                </div>
            </div>
        `;

        // Product Info Section
        const productInfo = `
            <div class="product-info">
                <h3 class="product-title">${product.productName}</h3>
                <p class="product-price">₹ ${product.salePrice.toLocaleString()}</p>
                ${
                    product.quantity > 0
                        ? `<p class="product-stock">In Stock: ${product.quantity}</p>`
                        : `<p class="text-danger">Out of Stock</p>`
                }
            </div>
        `;

        // Combine sections into the product card
        productCard.innerHTML = productImage + productInfo;

        // Append the product card to the container
        productsContainer.appendChild(productCard);
    });
}

function catFilter() {
    const selectedCategory = document.getElementById('cat-filter').value;

    // Send the selected category as a query parameter
    fetch(`/filter-by-category?category=${selectedCategory}`, {
        method: 'GET',
    })
    .then(response => response.json())
    .then(data => {
        updateProductList(data.products);
    })
    .catch(error => console.error('Error:', error));
}


const searchForm = document.getElementById('search-form');
    const searchInput = searchForm.querySelector('input[name="query"]');
    
    // Add an event listener for form submission
    searchForm.addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent the default form submission behavior

        const query = searchInput.value.trim();  // Get the query value
        
        // Only perform the search if there is a query
        if (query) {
            fetch(`/search?query=${query}`, { method: 'GET' })
                .then(response => response.json())
                .then(data => {
                    if (data.products) {
                        updateProductList(data.products);  // Update the product list with the response
                    } else {
                        console.log("No products found.");
                    }
                })
                .catch(error => console.error('Error:', error));
        }
    });




            $(document).ready(function () {
                $('.hero-slider-1').slick({
                    dots: true,
                    infinite: true,
                    speed: 500,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    autoplay: true,
                    autoplaySpeed: 5000,
                    arrows: true,
                    prevArrow: '<span class="slider-btn slider-prev"><i class="fi-rs-angle-left"></i></span>',
                    nextArrow: '<span class="slider-btn slider-next"><i class="fi-rs-angle-right"></i></span>',
                    appendArrows: '.hero-slider-1-arrow',
                    fade: true,
                    responsive: [
                        {
                            breakpoint: 768,
                            settings: {
                                arrows: false,
                                dots: true
                            }
                        }
                    ]
                });
            });
</script>





<%- include('../partials/user/footer') %>